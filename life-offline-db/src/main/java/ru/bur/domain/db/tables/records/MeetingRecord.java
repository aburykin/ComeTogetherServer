/*
 * This file is generated by jOOQ.
*/
package ru.bur.domain.db.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.bur.domain.db.tables.Meeting;


/**
 * Встречи
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeetingRecord extends UpdatableRecordImpl<MeetingRecord> implements Record5<Long, String, String, Timestamp, String> {

    private static final long serialVersionUID = 1611768461;

    /**
     * Setter for <code>base_schema.meeting.meeting_id</code>.
     */
    public void setMeetingId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>base_schema.meeting.meeting_id</code>.
     */
    public Long getMeetingId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>base_schema.meeting.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>base_schema.meeting.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>base_schema.meeting.place</code>.
     */
    public void setPlace(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>base_schema.meeting.place</code>.
     */
    public String getPlace() {
        return (String) get(2);
    }

    /**
     * Setter for <code>base_schema.meeting.start_date</code>.
     */
    public void setStartDate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>base_schema.meeting.start_date</code>.
     */
    public Timestamp getStartDate() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>base_schema.meeting.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>base_schema.meeting.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, Timestamp, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, Timestamp, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Meeting.MEETING.MEETING_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Meeting.MEETING.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Meeting.MEETING.PLACE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Meeting.MEETING.START_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Meeting.MEETING.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getMeetingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPlace();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getMeetingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPlace();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value1(Long value) {
        setMeetingId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value3(String value) {
        setPlace(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value4(Timestamp value) {
        setStartDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord value5(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingRecord values(Long value1, String value2, String value3, Timestamp value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MeetingRecord
     */
    public MeetingRecord() {
        super(Meeting.MEETING);
    }

    /**
     * Create a detached, initialised MeetingRecord
     */
    public MeetingRecord(Long meetingId, String name, String place, Timestamp startDate, String description) {
        super(Meeting.MEETING);

        set(0, meetingId);
        set(1, name);
        set(2, place);
        set(3, startDate);
        set(4, description);
    }
}
