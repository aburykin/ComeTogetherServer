/*
 * This file is generated by jOOQ.
*/
package ru.bur.domain.db;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import ru.bur.domain.db.tables.AppUser;
import ru.bur.domain.db.tables.Meeting;
import ru.bur.domain.db.tables.MeetingUserHref;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BaseSchema extends SchemaImpl {

    private static final long serialVersionUID = 1866452826;

    /**
     * The reference instance of <code>base_schema</code>
     */
    public static final BaseSchema BASE_SCHEMA = new BaseSchema();

    /**
     * пользователи приложения
     */
    public final AppUser APP_USER = ru.bur.domain.db.tables.AppUser.APP_USER;

    /**
     * Встречи
     */
    public final Meeting MEETING = ru.bur.domain.db.tables.Meeting.MEETING;

    /**
     * Участники встречи
     */
    public final MeetingUserHref MEETING_USER_HREF = ru.bur.domain.db.tables.MeetingUserHref.MEETING_USER_HREF;

    /**
     * No further instances allowed
     */
    private BaseSchema() {
        super("base_schema", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.APP_USER_APP_USER_ID_SEQ,
            Sequences.MEETING_MEETING_ID_SEQ,
            Sequences.MEETING_USER_HREF_MEETING_USER_HREF_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AppUser.APP_USER,
            Meeting.MEETING,
            MeetingUserHref.MEETING_USER_HREF);
    }
}
