/*
 * This file is generated by jOOQ.
*/
package ru.bur.domain.db.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.bur.domain.db.BaseSchema;
import ru.bur.domain.db.Indexes;
import ru.bur.domain.db.Keys;
import ru.bur.domain.db.tables.records.AppUserRecord;


/**
 * пользователи приложения
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppUser extends TableImpl<AppUserRecord> {

    private static final long serialVersionUID = -667204406;

    /**
     * The reference instance of <code>base_schema.app_user</code>
     */
    public static final AppUser APP_USER = new AppUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AppUserRecord> getRecordType() {
        return AppUserRecord.class;
    }

    /**
     * The column <code>base_schema.app_user.app_user_id</code>.
     */
    public final TableField<AppUserRecord, Long> APP_USER_ID = createField("app_user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('base_schema.app_user_app_user_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>base_schema.app_user.phone_number</code>.
     */
    public final TableField<AppUserRecord, String> PHONE_NUMBER = createField("phone_number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>base_schema.app_user.authorization_token</code>.
     */
    public final TableField<AppUserRecord, String> AUTHORIZATION_TOKEN = createField("authorization_token", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>base_schema.app_user.first_name</code>.
     */
    public final TableField<AppUserRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>base_schema.app_user.last_name</code>.
     */
    public final TableField<AppUserRecord, Integer> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>base_schema.app_user.age</code>.
     */
    public final TableField<AppUserRecord, Integer> AGE = createField("age", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>base_schema.app_user.birthday_date</code>.
     */
    public final TableField<AppUserRecord, Timestamp> BIRTHDAY_DATE = createField("birthday_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>base_schema.app_user</code> table reference
     */
    public AppUser() {
        this(DSL.name("app_user"), null);
    }

    /**
     * Create an aliased <code>base_schema.app_user</code> table reference
     */
    public AppUser(String alias) {
        this(DSL.name(alias), APP_USER);
    }

    /**
     * Create an aliased <code>base_schema.app_user</code> table reference
     */
    public AppUser(Name alias) {
        this(alias, APP_USER);
    }

    private AppUser(Name alias, Table<AppUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private AppUser(Name alias, Table<AppUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "пользователи приложения");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BaseSchema.BASE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.APP_USER_APP_USER_ID_UINDEX, Indexes.APP_USER_AUTHORIZATION_TOKEN_UINDEX, Indexes.APP_USER_PHONE_NUMBER_UINDEX, Indexes.APP_USER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AppUserRecord, Long> getIdentity() {
        return Keys.IDENTITY_APP_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AppUserRecord> getPrimaryKey() {
        return Keys.APP_USER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AppUserRecord>> getKeys() {
        return Arrays.<UniqueKey<AppUserRecord>>asList(Keys.APP_USER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUser as(String alias) {
        return new AppUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AppUser as(Name alias) {
        return new AppUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AppUser rename(String name) {
        return new AppUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AppUser rename(Name name) {
        return new AppUser(name, null);
    }
}
