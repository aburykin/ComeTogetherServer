/*
 * This file is generated by jOOQ.
*/
package ru.bur.domain.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.bur.domain.db.tables.MeetingUserHref;


/**
 * Участники встречи
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeetingUserHrefRecord extends UpdatableRecordImpl<MeetingUserHrefRecord> implements Record4<Long, Long, Long, Boolean> {

    private static final long serialVersionUID = 1441353222;

    /**
     * Setter for <code>base_schema.meeting_user_href.meeting_user_href_id</code>.
     */
    public void setMeetingUserHrefId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>base_schema.meeting_user_href.meeting_user_href_id</code>.
     */
    public Long getMeetingUserHrefId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>base_schema.meeting_user_href.meeting_id</code>.
     */
    public void setMeetingId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>base_schema.meeting_user_href.meeting_id</code>.
     */
    public Long getMeetingId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>base_schema.meeting_user_href.app_user_id</code>.
     */
    public void setAppUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>base_schema.meeting_user_href.app_user_id</code>.
     */
    public Long getAppUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>base_schema.meeting_user_href.is_organizer</code>. Если true, то этот участник является ораганизатором встречи
     */
    public void setIsOrganizer(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>base_schema.meeting_user_href.is_organizer</code>. Если true, то этот участник является ораганизатором встречи
     */
    public Boolean getIsOrganizer() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return MeetingUserHref.MEETING_USER_HREF.MEETING_USER_HREF_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return MeetingUserHref.MEETING_USER_HREF.MEETING_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return MeetingUserHref.MEETING_USER_HREF.APP_USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return MeetingUserHref.MEETING_USER_HREF.IS_ORGANIZER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getMeetingUserHrefId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getMeetingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getAppUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component4() {
        return getIsOrganizer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getMeetingUserHrefId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getMeetingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getAppUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getIsOrganizer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingUserHrefRecord value1(Long value) {
        setMeetingUserHrefId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingUserHrefRecord value2(Long value) {
        setMeetingId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingUserHrefRecord value3(Long value) {
        setAppUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingUserHrefRecord value4(Boolean value) {
        setIsOrganizer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeetingUserHrefRecord values(Long value1, Long value2, Long value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MeetingUserHrefRecord
     */
    public MeetingUserHrefRecord() {
        super(MeetingUserHref.MEETING_USER_HREF);
    }

    /**
     * Create a detached, initialised MeetingUserHrefRecord
     */
    public MeetingUserHrefRecord(Long meetingUserHrefId, Long meetingId, Long appUserId, Boolean isOrganizer) {
        super(MeetingUserHref.MEETING_USER_HREF);

        set(0, meetingUserHrefId);
        set(1, meetingId);
        set(2, appUserId);
        set(3, isOrganizer);
    }
}
